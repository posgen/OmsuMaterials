/**
    Пример на использование статических массивов.

    Программа для расчёта "времени выживания" некого "существа"
    при бомбардировке некоторой площади снарядами.

    В этой задаче интересует вопрос: как нужно себя вести, чтобы
    продержаться как можно больше времени? Оставать на месте? перемещаться на
    отведённой территории? Если перемещаться - то как?

    Ответа на подобные вопросы должна дать программа.

    Итак, есть поле, разбитое на кучу квадратов. Само поле - тоже
    является квадратным. В каждый момент времени в произвольный квадрат
    сбрасывается снаряд. Если не было попадания в "существо", оно
    каким-нибудь образом меняет своё место положение.

    В ходе пятничной практики был реализован совсем уж простой вариант:
    и "существо" может метяться произвольно по квадратам, и снаряды
    могут попадать в одну и ту же ячейку произвольное количество раз.
    Это не очень интересно, уж больно вольный эксперимент получается.
    Поэтому,

    **что нужно сделать** соответствующей подгруппе прикладников к 02.11.2018:
        1. Добавить условие, что в один квадрат снаряд сбрасывается только один раз.

        2. Добавить условие, что в повреждённый снарядом квадрат, забегать "существу"
        уже нельзя.

        3. Вынести одно исследование в отдельную функцию, смысл которой будет в реализации
        некоторой стратегии поведения.

        4*. Реализовать дополнительные стратегии: не только свободное перемещение в любой
        квадрат решётки, но и постоянное нахождение в одном квадрате, и переход только
        в ближайшие (к текущему положению) квадраты.

        Звёздочка "*" означает, что продумавание этого пункта - обязательно (то есть - какие
        переменные и/или функции нам нужны, чтобы реализовать написанные в пункте хотелки).
        Реализация - желательно, но не критично, если не будет сделана.
*/

#include  "ffhelpers.h"

using namespace std;
using namespace ffomsu;

const size_t FIELD_SZ = 10;

int main()
{
    int matrix[FIELD_SZ][FIELD_SZ];

    size_t chislo_exp, sum_steps = 0;
    print("Введите количество экспериментов");
    get_value(chislo_exp);

    for (size_t i = 1; i<=chislo_exp;i++) {
        for (size_t i1 = 0; i1 < FIELD_SZ; ++i1) {
            for(size_t j = 0; j < FIELD_SZ; ++j) {
                matrix[i1][j] = 0;
            }
        }

        size_t x, y, step = 1;
        x = y = FIELD_SZ/2;
        matrix[x][y] = 1;

        do {
            size_t x1 = rand_a_b_excl(0,FIELD_SZ);
            size_t y1 = rand_a_b_excl(0,FIELD_SZ);
            if (x == x1 and y == y1) {
                break;
            }

            /// Ставим индикатор, что старый квадрат покинут
            matrix[x][y] = 0;
            x = rand_a_b_excl(0,FIELD_SZ);
            y = rand_a_b_excl(0,FIELD_SZ);
            /// Ставим индикатор, что новый квадрат занят
            matrix[x][y] = 1;
            step++;
        } while(true);

        sum_steps += step;
        print("на эксперименте №",chislo_exp, " prizrak продержался ",step,"\n");
    }

    print("в среднем удалось продержаться ", double(sum_steps)/chislo_exp );
}
